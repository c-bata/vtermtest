package keys

var (
	Tab       = []byte{0x09}
	Enter     = []byte{0x0D} // CR
	Backspace = []byte{0x7F} // DEL

	Up    = []byte{0x1B, 0x5B, 0x41}
	Down  = []byte{0x1B, 0x5B, 0x42}
	Right = []byte{0x1B, 0x5B, 0x43}
	Left  = []byte{0x1B, 0x5B, 0x44}

	CtrlA = []byte{0x01}
	CtrlB = []byte{0x02}
	CtrlC = []byte{0x03}
	CtrlD = []byte{0x04}
	CtrlE = []byte{0x05}
	CtrlF = []byte{0x06}
)

func Text(s string) []byte {
	return []byte(s)
}

func F(n int) []byte {
	if n < 1 || n > 24 {
		return nil
	}

	switch n {
	case 1:
		return []byte{0x1B, 0x4F, 0x50}
	case 2:
		return []byte{0x1B, 0x4F, 0x51}
	case 3:
		return []byte{0x1B, 0x4F, 0x52}
	case 4:
		return []byte{0x1B, 0x4F, 0x53}
	case 5:
		return []byte{0x1B, 0x5B, 0x31, 0x35, 0x7E}
	case 6:
		return []byte{0x1B, 0x5B, 0x31, 0x37, 0x7E}
	case 7:
		return []byte{0x1B, 0x5B, 0x31, 0x38, 0x7E}
	case 8:
		return []byte{0x1B, 0x5B, 0x31, 0x39, 0x7E}
	case 9:
		return []byte{0x1B, 0x5B, 0x32, 0x30, 0x7E}
	case 10:
		return []byte{0x1B, 0x5B, 0x32, 0x31, 0x7E}
	case 11:
		return []byte{0x1B, 0x5B, 0x32, 0x33, 0x7E}
	case 12:
		return []byte{0x1B, 0x5B, 0x32, 0x34, 0x7E}
	default:
		// F13-F24 have different escape sequences
		return nil
	}
}